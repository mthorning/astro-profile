<style>
  canvas {
    width: 100%;
    height: 100%;
  }
</style>

<script>
  const canvas = document.getElementById("cw") as HTMLCanvasElement;
  const context = canvas.getContext("2d");

  if (!context) throw new Error("No context");

  context.globalAlpha = 0.5;

  class RainDrop {
    x: number;
    y: number;
    gravity: number;
    rainDropTrailWidth: number;
    strokeColor: string;

    constructor(x: number, rainDropTrailWidth: number, strokeColor: string) {
      this.y = 0;
      this.x = x;
      this.gravity = Math.random() * 10;
      this.rainDropTrailWidth = rainDropTrailWidth;
      this.strokeColor = strokeColor;
    }

    fall() {
      if (!context) throw new Error("No context");
      context.beginPath();
      context.lineWidth = this.rainDropTrailWidth;
      context.strokeStyle = this.strokeColor;
      context.moveTo(this.x, this.y);
      this.y += this.gravity;
      context.lineTo(this.x, this.y);
      context.stroke();
    }

    hasFallen(): boolean {
      return this.y >= innerHeight;
    }
  }

  function generateColor() {
    let hexSet = "0123456789ABCDEF";
    let finalHexString = "#";
    for (let i = 0; i < 6; i++) {
      finalHexString += hexSet[Math.ceil(Math.random() * 15)];
    }
    return finalHexString;
  }

  function setSize() {
    canvas.height = innerHeight;
    canvas.width = innerWidth;
  }

  class Cloud {
    rainDrops: RainDrop[] = [];
    fallingDrops: RainDrop[] = [];
    maxFallingDrops: number;

    constructor(initialRainDrops: number, maxFallingDrops: number) {
      this.maxFallingDrops = maxFallingDrops;
      for (let i = 0; i < initialRainDrops; i++) {
        this.addRainDrop();
      }
    }

    addRainDrop() {
      this.rainDrops.push(
        new RainDrop(Math.random() * innerWidth, 2, generateColor()),
      );
    }

    dropRainDrop() {
      this.fallingDrops.push(this.rainDrops.pop() as RainDrop);
      this.addRainDrop();
    }

    rain() {
      if (!context) throw new Error("No context");
      setInterval(() => {
        context.clearRect(0, 0, canvas.width, canvas.height);
        if (this.fallingDrops.length < this.maxFallingDrops) {
          this.dropRainDrop();
        }

        this.fallingDrops.forEach((rainDrop, i) => {
          rainDrop.fall();
          if (rainDrop.hasFallen()) {
            this.fallingDrops.splice(i, 1);
          }
        });
      }, 10);
    }
  }

  setSize();
  const cloud = new Cloud(500, 350);
  cloud.rain();

  addEventListener("resize", () => setSize());
</script>

<canvas id="cw"></canvas>
